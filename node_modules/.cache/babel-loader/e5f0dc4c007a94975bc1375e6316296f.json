{"ast":null,"code":"import { createRequestConfig } from 'contentful-sdk-core';\nimport errorHandler from './error-handler';\nimport entities from './entities';\nexport default function createClientApi(_ref) {\n  var http = _ref.http;\n  var _entities$space = entities.space,\n      wrapSpace = _entities$space.wrapSpace,\n      wrapSpaceCollection = _entities$space.wrapSpaceCollection;\n  var wrapUser = entities.user.wrapUser;\n  var _entities$personalAcc = entities.personalAccessToken,\n      wrapPersonalAccessToken = _entities$personalAcc.wrapPersonalAccessToken,\n      wrapPersonalAccessTokenCollection = _entities$personalAcc.wrapPersonalAccessTokenCollection;\n  var _entities$organizatio = entities.organization,\n      wrapOrganization = _entities$organizatio.wrapOrganization,\n      wrapOrganizationCollection = _entities$organizatio.wrapOrganizationCollection;\n  var wrapUsageCollection = entities.usage.wrapUsageCollection;\n  return {\n    /**\n     * Gets all spaces\n     * @return Promise for a collection of Spaces\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getSpaces()\n     * .then((response) => console.log(response.items))\n     * .catch(console.error)\n     * ```\n     */\n    getSpaces: function getSpaces() {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return http.get('', createRequestConfig({\n        query: query\n      })).then(function (response) {\n        return wrapSpaceCollection(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Gets a space\n     * @param id - Space ID\n     * @return Promise for a Space\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getSpace('<space_id>')\n     * .then((space) => console.log(space))\n     * .catch(console.error)\n     * ```\n     */\n    getSpace: function getSpace(id) {\n      return http.get(id).then(function (response) {\n        return wrapSpace(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Creates a space\n     * @param data - Object representation of the Space to be created\n     * @param organizationId - Organization ID, if the associated token can manage more than one organization.\n     * @return Promise for the newly created Space\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.createSpace({\n     *   name: 'Name of new space'\n     * })\n     * .then((space) => console.log(space))\n     * .catch(console.error)\n     * ```\n     */\n    createSpace: function createSpace(data, organizationId) {\n      return http.post('', data, {\n        headers: organizationId ? {\n          'X-Contentful-Organization': organizationId\n        } : {}\n      }).then(function (response) {\n        return wrapSpace(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Gets an organization\n     * @param  id - Organization ID\n     * @return Promise for a Organization\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getOrganization('<org_id>')\n     * .then((org) => console.log(org))\n     * .catch(console.error)\n     * ```\n     */\n    getOrganization: function getOrganization(id) {\n      var _http$defaults, _http$defaults$baseUR;\n\n      var baseURL = (_http$defaults = http.defaults) === null || _http$defaults === void 0 ? void 0 : (_http$defaults$baseUR = _http$defaults.baseURL) === null || _http$defaults$baseUR === void 0 ? void 0 : _http$defaults$baseUR.replace('/spaces/', '/organizations/');\n      return http.get('', {\n        baseURL: baseURL\n      }).then(function (response) {\n        var org = response.data.items.find(function (org) {\n          return org.sys.id === id;\n        });\n\n        if (!org) {\n          var error = new Error(\"No organization was found with the ID \".concat(id, \" instead got \").concat(JSON.stringify(response))); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n\n          error.status = 404; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n\n          error.statusText = 'Not Found';\n          return Promise.reject(error);\n        }\n\n        return wrapOrganization(http, org);\n      }, errorHandler);\n    },\n\n    /**\n     * Gets a collection of Organizations\n     * @return Promise for a collection of Organizations\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getOrganizations()\n     * .then(result => console.log(result.items))\n     * .catch(console.error)\n     * ```\n     */\n    getOrganizations: function getOrganizations() {\n      var _http$defaults2, _http$defaults2$baseU;\n\n      var baseURL = (_http$defaults2 = http.defaults) === null || _http$defaults2 === void 0 ? void 0 : (_http$defaults2$baseU = _http$defaults2.baseURL) === null || _http$defaults2$baseU === void 0 ? void 0 : _http$defaults2$baseU.replace('/spaces/', '/organizations/');\n      return http.get('', {\n        baseURL: baseURL\n      }).then(function (response) {\n        return wrapOrganizationCollection(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Gets the authenticated user\n     * @return Promise for a User\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getCurrentUser()\n     * .then(user => console.log(user.firstName))\n     * .catch(console.error)\n     * ```\n     */\n    getCurrentUser: function getCurrentUser() {\n      var _http$defaults3, _http$defaults3$baseU;\n\n      var baseURL = (_http$defaults3 = http.defaults) === null || _http$defaults3 === void 0 ? void 0 : (_http$defaults3$baseU = _http$defaults3.baseURL) === null || _http$defaults3$baseU === void 0 ? void 0 : _http$defaults3$baseU.replace('/spaces/', '/users/me/');\n      return http.get('', {\n        baseURL: baseURL\n      }).then(function (response) {\n        return wrapUser(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Creates a personal access token\n     * @param data - personal access token config\n     * @return Promise for a Token\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.createPersonalAccessToken(\n     *  {\n     *    \"name\": \"My Token\",\n     *    \"scope\": [\n     *      \"content_management_manage\"\n     *    ]\n     *  }\n     * )\n     * .then(personalAccessToken => console.log(personalAccessToken.token))\n     * .catch(console.error)\n     * ```\n     */\n    createPersonalAccessToken: function createPersonalAccessToken(data) {\n      var _http$defaults4, _http$defaults4$baseU;\n\n      var baseURL = (_http$defaults4 = http.defaults) === null || _http$defaults4 === void 0 ? void 0 : (_http$defaults4$baseU = _http$defaults4.baseURL) === null || _http$defaults4$baseU === void 0 ? void 0 : _http$defaults4$baseU.replace('/spaces/', '/users/me/access_tokens');\n      return http.post('', data, {\n        baseURL: baseURL\n      }).then(function (response) {\n        return wrapPersonalAccessToken(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Gets a personal access token\n     * @param data - personal access token config\n     * @return Promise for a Token\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getPersonalAccessToken(tokenId)\n     * .then(token => console.log(token.token))\n     * .catch(console.error)\n     * ```\n     */\n    getPersonalAccessToken: function getPersonalAccessToken(tokenId) {\n      var _http$defaults5, _http$defaults5$baseU;\n\n      var baseURL = (_http$defaults5 = http.defaults) === null || _http$defaults5 === void 0 ? void 0 : (_http$defaults5$baseU = _http$defaults5.baseURL) === null || _http$defaults5$baseU === void 0 ? void 0 : _http$defaults5$baseU.replace('/spaces/', '/users/me/access_tokens');\n      return http.get(tokenId, {\n        baseURL: baseURL\n      }).then(function (response) {\n        return wrapPersonalAccessToken(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Gets all personal access tokens\n     * @return Promise for a Token\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getPersonalAccessTokens()\n     * .then(response => console.log(reponse.items))\n     * .catch(console.error)\n     * ```\n     */\n    getPersonalAccessTokens: function getPersonalAccessTokens() {\n      var _http$defaults6, _http$defaults6$baseU;\n\n      var baseURL = (_http$defaults6 = http.defaults) === null || _http$defaults6 === void 0 ? void 0 : (_http$defaults6$baseU = _http$defaults6.baseURL) === null || _http$defaults6$baseU === void 0 ? void 0 : _http$defaults6$baseU.replace('/spaces/', '/users/me/access_tokens');\n      return http.get('', {\n        baseURL: baseURL\n      }).then(function (response) {\n        return wrapPersonalAccessTokenCollection(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Get organization usage grouped by {@link UsageMetricEnum metric}\n     *\n     * @param organizationId - Id of an organization\n     * @param query - Query parameters\n     * @return Promise of a collection of usages\n     * @example ```javascript\n     *\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getOrganizationUsage('<organizationId>', {\n     *    'metric[in]': 'cma,gql',\n     *    'dateRange.startAt': '2019-10-22',\n     *    'dateRange.endAt': '2019-11-10'\n     *    }\n     * })\n     * .then(result => console.log(result.items))\n     * .catch(console.error)\n     * ```\n     */\n    getOrganizationUsage: function getOrganizationUsage(organizationId) {\n      var _http$defaults7, _http$defaults7$baseU;\n\n      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var baseURL = (_http$defaults7 = http.defaults) === null || _http$defaults7 === void 0 ? void 0 : (_http$defaults7$baseU = _http$defaults7.baseURL) === null || _http$defaults7$baseU === void 0 ? void 0 : _http$defaults7$baseU.replace('/spaces/', \"/organizations/\".concat(organizationId, \"/organization_periodic_usages\"));\n      return http.get('', {\n        baseURL: baseURL,\n        params: query\n      }).then(function (response) {\n        return wrapUsageCollection(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Get organization usage grouped by space and metric\n     *\n     * @param organizationId - Id of an organization\n     * @param query - Query parameters\n     * @return Promise of a collection of usages\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getSpaceUsage('<organizationId>', {\n     *    skip: 0,\n     *    limit: 10,\n     *    'metric[in]': 'cda,cpa,gql',\n     *    'dateRange.startAt': '2019-10-22',\n     *    'dateRange.endAt': '2020-11-30'\n     *    }\n     * })\n     * .then(result => console.log(result.items))\n     * .catch(console.error)\n     * ```\n     */\n    getSpaceUsage: function getSpaceUsage(organizationId) {\n      var _http$defaults8, _http$defaults8$baseU;\n\n      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var baseURL = (_http$defaults8 = http.defaults) === null || _http$defaults8 === void 0 ? void 0 : (_http$defaults8$baseU = _http$defaults8.baseURL) === null || _http$defaults8$baseU === void 0 ? void 0 : _http$defaults8$baseU.replace('/spaces/', \"/organizations/\".concat(organizationId, \"/space_periodic_usages\"));\n      return http.get('', {\n        baseURL: baseURL,\n        params: query\n      }).then(function (response) {\n        return wrapUsageCollection(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Make a custom request to the Contentful management API's /spaces endpoint\n     * @param opts - axios request options (https://github.com/mzabriskie/axios)\n     * @return Promise for the response data\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.rawRequest({\n     *   method: 'GET',\n     *   url: '/custom/path'\n     * })\n     * .then((responseData) => console.log(responseData))\n     * .catch(console.error)\n     * ```\n     */\n    rawRequest: function rawRequest(opts) {\n      return http(opts).then(function (response) {\n        return response.data;\n      }, errorHandler);\n    }\n  };\n}","map":{"version":3,"sources":["/Users/alexanderstolzoff/Desktop/Projects/resort/node_modules/contentful-management/dist/es-modules/create-contentful-api.js"],"names":["createRequestConfig","errorHandler","entities","createClientApi","_ref","http","_entities$space","space","wrapSpace","wrapSpaceCollection","wrapUser","user","_entities$personalAcc","personalAccessToken","wrapPersonalAccessToken","wrapPersonalAccessTokenCollection","_entities$organizatio","organization","wrapOrganization","wrapOrganizationCollection","wrapUsageCollection","usage","getSpaces","query","arguments","length","undefined","get","then","response","data","getSpace","id","createSpace","organizationId","post","headers","getOrganization","_http$defaults","_http$defaults$baseUR","baseURL","defaults","replace","org","items","find","sys","error","Error","concat","JSON","stringify","status","statusText","Promise","reject","getOrganizations","_http$defaults2","_http$defaults2$baseU","getCurrentUser","_http$defaults3","_http$defaults3$baseU","createPersonalAccessToken","_http$defaults4","_http$defaults4$baseU","getPersonalAccessToken","tokenId","_http$defaults5","_http$defaults5$baseU","getPersonalAccessTokens","_http$defaults6","_http$defaults6$baseU","getOrganizationUsage","_http$defaults7","_http$defaults7$baseU","params","getSpaceUsage","_http$defaults8","_http$defaults8$baseU","rawRequest","opts"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,qBAApC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,eAAe,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC5C,MAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AACA,MAAIC,eAAe,GAAGJ,QAAQ,CAACK,KAA/B;AAAA,MACIC,SAAS,GAAGF,eAAe,CAACE,SADhC;AAAA,MAEIC,mBAAmB,GAAGH,eAAe,CAACG,mBAF1C;AAGA,MAAIC,QAAQ,GAAGR,QAAQ,CAACS,IAAT,CAAcD,QAA7B;AACA,MAAIE,qBAAqB,GAAGV,QAAQ,CAACW,mBAArC;AAAA,MACIC,uBAAuB,GAAGF,qBAAqB,CAACE,uBADpD;AAAA,MAEIC,iCAAiC,GAAGH,qBAAqB,CAACG,iCAF9D;AAGA,MAAIC,qBAAqB,GAAGd,QAAQ,CAACe,YAArC;AAAA,MACIC,gBAAgB,GAAGF,qBAAqB,CAACE,gBAD7C;AAAA,MAEIC,0BAA0B,GAAGH,qBAAqB,CAACG,0BAFvD;AAGA,MAAIC,mBAAmB,GAAGlB,QAAQ,CAACmB,KAAT,CAAeD,mBAAzC;AACA,SAAO;AACL;;;;;;;;;;;;;;;AAeAE,IAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAC9B,UAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;AACA,aAAOnB,IAAI,CAACsB,GAAL,CAAS,EAAT,EAAa3B,mBAAmB,CAAC;AACtCuB,QAAAA,KAAK,EAAEA;AAD+B,OAAD,CAAhC,EAEHK,IAFG,CAEE,UAAUC,QAAV,EAAoB;AAC3B,eAAOpB,mBAAmB,CAACJ,IAAD,EAAOwB,QAAQ,CAACC,IAAhB,CAA1B;AACD,OAJM,EAIJ7B,YAJI,CAAP;AAKD,KAvBI;;AAyBL;;;;;;;;;;;;;;;;AAgBA8B,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,EAAlB,EAAsB;AAC9B,aAAO3B,IAAI,CAACsB,GAAL,CAASK,EAAT,EAAaJ,IAAb,CAAkB,UAAUC,QAAV,EAAoB;AAC3C,eAAOrB,SAAS,CAACH,IAAD,EAAOwB,QAAQ,CAACC,IAAhB,CAAhB;AACD,OAFM,EAEJ7B,YAFI,CAAP;AAGD,KA7CI;;AA+CL;;;;;;;;;;;;;;;;;;;AAmBAgC,IAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBH,IAArB,EAA2BI,cAA3B,EAA2C;AACtD,aAAO7B,IAAI,CAAC8B,IAAL,CAAU,EAAV,EAAcL,IAAd,EAAoB;AACzBM,QAAAA,OAAO,EAAEF,cAAc,GAAG;AACxB,uCAA6BA;AADL,SAAH,GAEnB;AAHqB,OAApB,EAIJN,IAJI,CAIC,UAAUC,QAAV,EAAoB;AAC1B,eAAOrB,SAAS,CAACH,IAAD,EAAOwB,QAAQ,CAACC,IAAhB,CAAhB;AACD,OANM,EAMJ7B,YANI,CAAP;AAOD,KA1EI;;AA4EL;;;;;;;;;;;;;;;;AAgBAoC,IAAAA,eAAe,EAAE,SAASA,eAAT,CAAyBL,EAAzB,EAA6B;AAC5C,UAAIM,cAAJ,EAAoBC,qBAApB;;AAEA,UAAIC,OAAO,GAAG,CAACF,cAAc,GAAGjC,IAAI,CAACoC,QAAvB,MAAqC,IAArC,IAA6CH,cAAc,KAAK,KAAK,CAArE,GAAyE,KAAK,CAA9E,GAAkF,CAACC,qBAAqB,GAAGD,cAAc,CAACE,OAAxC,MAAqD,IAArD,IAA6DD,qBAAqB,KAAK,KAAK,CAA5F,GAAgG,KAAK,CAArG,GAAyGA,qBAAqB,CAACG,OAAtB,CAA8B,UAA9B,EAA0C,iBAA1C,CAAzM;AACA,aAAOrC,IAAI,CAACsB,GAAL,CAAS,EAAT,EAAa;AAClBa,QAAAA,OAAO,EAAEA;AADS,OAAb,EAEJZ,IAFI,CAEC,UAAUC,QAAV,EAAoB;AAC1B,YAAIc,GAAG,GAAGd,QAAQ,CAACC,IAAT,CAAcc,KAAd,CAAoBC,IAApB,CAAyB,UAAUF,GAAV,EAAe;AAChD,iBAAOA,GAAG,CAACG,GAAJ,CAAQd,EAAR,KAAeA,EAAtB;AACD,SAFS,CAAV;;AAIA,YAAI,CAACW,GAAL,EAAU;AACR,cAAII,KAAK,GAAG,IAAIC,KAAJ,CAAU,yCAAyCC,MAAzC,CAAgDjB,EAAhD,EAAoD,eAApD,EAAqEiB,MAArE,CAA4EC,IAAI,CAACC,SAAL,CAAetB,QAAf,CAA5E,CAAV,CAAZ,CADQ,CACsH;AAC9H;;AAEAkB,UAAAA,KAAK,CAACK,MAAN,GAAe,GAAf,CAJQ,CAIY;AACpB;;AAEAL,UAAAA,KAAK,CAACM,UAAN,GAAmB,WAAnB;AACA,iBAAOC,OAAO,CAACC,MAAR,CAAeR,KAAf,CAAP;AACD;;AAED,eAAO7B,gBAAgB,CAACb,IAAD,EAAOsC,GAAP,CAAvB;AACD,OAnBM,EAmBJ1C,YAnBI,CAAP;AAoBD,KApHI;;AAsHL;;;;;;;;;;;;;;;AAeAuD,IAAAA,gBAAgB,EAAE,SAASA,gBAAT,GAA4B;AAC5C,UAAIC,eAAJ,EAAqBC,qBAArB;;AAEA,UAAIlB,OAAO,GAAG,CAACiB,eAAe,GAAGpD,IAAI,CAACoC,QAAxB,MAAsC,IAAtC,IAA8CgB,eAAe,KAAK,KAAK,CAAvE,GAA2E,KAAK,CAAhF,GAAoF,CAACC,qBAAqB,GAAGD,eAAe,CAACjB,OAAzC,MAAsD,IAAtD,IAA8DkB,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAAChB,OAAtB,CAA8B,UAA9B,EAA0C,iBAA1C,CAA5M;AACA,aAAOrC,IAAI,CAACsB,GAAL,CAAS,EAAT,EAAa;AAClBa,QAAAA,OAAO,EAAEA;AADS,OAAb,EAEJZ,IAFI,CAEC,UAAUC,QAAV,EAAoB;AAC1B,eAAOV,0BAA0B,CAACd,IAAD,EAAOwB,QAAQ,CAACC,IAAhB,CAAjC;AACD,OAJM,EAIJ7B,YAJI,CAAP;AAKD,KA9II;;AAgJL;;;;;;;;;;;;;;;AAeA0D,IAAAA,cAAc,EAAE,SAASA,cAAT,GAA0B;AACxC,UAAIC,eAAJ,EAAqBC,qBAArB;;AAEA,UAAIrB,OAAO,GAAG,CAACoB,eAAe,GAAGvD,IAAI,CAACoC,QAAxB,MAAsC,IAAtC,IAA8CmB,eAAe,KAAK,KAAK,CAAvE,GAA2E,KAAK,CAAhF,GAAoF,CAACC,qBAAqB,GAAGD,eAAe,CAACpB,OAAzC,MAAsD,IAAtD,IAA8DqB,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAACnB,OAAtB,CAA8B,UAA9B,EAA0C,YAA1C,CAA5M;AACA,aAAOrC,IAAI,CAACsB,GAAL,CAAS,EAAT,EAAa;AAClBa,QAAAA,OAAO,EAAEA;AADS,OAAb,EAEJZ,IAFI,CAEC,UAAUC,QAAV,EAAoB;AAC1B,eAAOnB,QAAQ,CAACL,IAAD,EAAOwB,QAAQ,CAACC,IAAhB,CAAf;AACD,OAJM,EAIJ7B,YAJI,CAAP;AAKD,KAxKI;;AA0KL;;;;;;;;;;;;;;;;;;;;;;;AAuBA6D,IAAAA,yBAAyB,EAAE,SAASA,yBAAT,CAAmChC,IAAnC,EAAyC;AAClE,UAAIiC,eAAJ,EAAqBC,qBAArB;;AAEA,UAAIxB,OAAO,GAAG,CAACuB,eAAe,GAAG1D,IAAI,CAACoC,QAAxB,MAAsC,IAAtC,IAA8CsB,eAAe,KAAK,KAAK,CAAvE,GAA2E,KAAK,CAAhF,GAAoF,CAACC,qBAAqB,GAAGD,eAAe,CAACvB,OAAzC,MAAsD,IAAtD,IAA8DwB,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAACtB,OAAtB,CAA8B,UAA9B,EAA0C,yBAA1C,CAA5M;AACA,aAAOrC,IAAI,CAAC8B,IAAL,CAAU,EAAV,EAAcL,IAAd,EAAoB;AACzBU,QAAAA,OAAO,EAAEA;AADgB,OAApB,EAEJZ,IAFI,CAEC,UAAUC,QAAV,EAAoB;AAC1B,eAAOf,uBAAuB,CAACT,IAAD,EAAOwB,QAAQ,CAACC,IAAhB,CAA9B;AACD,OAJM,EAIJ7B,YAJI,CAAP;AAKD,KA1MI;;AA4ML;;;;;;;;;;;;;;;;AAgBAgE,IAAAA,sBAAsB,EAAE,SAASA,sBAAT,CAAgCC,OAAhC,EAAyC;AAC/D,UAAIC,eAAJ,EAAqBC,qBAArB;;AAEA,UAAI5B,OAAO,GAAG,CAAC2B,eAAe,GAAG9D,IAAI,CAACoC,QAAxB,MAAsC,IAAtC,IAA8C0B,eAAe,KAAK,KAAK,CAAvE,GAA2E,KAAK,CAAhF,GAAoF,CAACC,qBAAqB,GAAGD,eAAe,CAAC3B,OAAzC,MAAsD,IAAtD,IAA8D4B,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAAC1B,OAAtB,CAA8B,UAA9B,EAA0C,yBAA1C,CAA5M;AACA,aAAOrC,IAAI,CAACsB,GAAL,CAASuC,OAAT,EAAkB;AACvB1B,QAAAA,OAAO,EAAEA;AADc,OAAlB,EAEJZ,IAFI,CAEC,UAAUC,QAAV,EAAoB;AAC1B,eAAOf,uBAAuB,CAACT,IAAD,EAAOwB,QAAQ,CAACC,IAAhB,CAA9B;AACD,OAJM,EAIJ7B,YAJI,CAAP;AAKD,KArOI;;AAuOL;;;;;;;;;;;;;;;AAeAoE,IAAAA,uBAAuB,EAAE,SAASA,uBAAT,GAAmC;AAC1D,UAAIC,eAAJ,EAAqBC,qBAArB;;AAEA,UAAI/B,OAAO,GAAG,CAAC8B,eAAe,GAAGjE,IAAI,CAACoC,QAAxB,MAAsC,IAAtC,IAA8C6B,eAAe,KAAK,KAAK,CAAvE,GAA2E,KAAK,CAAhF,GAAoF,CAACC,qBAAqB,GAAGD,eAAe,CAAC9B,OAAzC,MAAsD,IAAtD,IAA8D+B,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAAC7B,OAAtB,CAA8B,UAA9B,EAA0C,yBAA1C,CAA5M;AACA,aAAOrC,IAAI,CAACsB,GAAL,CAAS,EAAT,EAAa;AAClBa,QAAAA,OAAO,EAAEA;AADS,OAAb,EAEJZ,IAFI,CAEC,UAAUC,QAAV,EAAoB;AAC1B,eAAOd,iCAAiC,CAACV,IAAD,EAAOwB,QAAQ,CAACC,IAAhB,CAAxC;AACD,OAJM,EAIJ7B,YAJI,CAAP;AAKD,KA/PI;;AAiQL;;;;;;;;;;;;;;;;;;;;;;;;AAwBAuE,IAAAA,oBAAoB,EAAE,SAASA,oBAAT,CAA8BtC,cAA9B,EAA8C;AAClE,UAAIuC,eAAJ,EAAqBC,qBAArB;;AAEA,UAAInD,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;AACA,UAAIgB,OAAO,GAAG,CAACiC,eAAe,GAAGpE,IAAI,CAACoC,QAAxB,MAAsC,IAAtC,IAA8CgC,eAAe,KAAK,KAAK,CAAvE,GAA2E,KAAK,CAAhF,GAAoF,CAACC,qBAAqB,GAAGD,eAAe,CAACjC,OAAzC,MAAsD,IAAtD,IAA8DkC,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAAChC,OAAtB,CAA8B,UAA9B,EAA0C,kBAAkBO,MAAlB,CAAyBf,cAAzB,EAAyC,+BAAzC,CAA1C,CAA5M;AACA,aAAO7B,IAAI,CAACsB,GAAL,CAAS,EAAT,EAAa;AAClBa,QAAAA,OAAO,EAAEA,OADS;AAElBmC,QAAAA,MAAM,EAAEpD;AAFU,OAAb,EAGJK,IAHI,CAGC,UAAUC,QAAV,EAAoB;AAC1B,eAAOT,mBAAmB,CAACf,IAAD,EAAOwB,QAAQ,CAACC,IAAhB,CAA1B;AACD,OALM,EAKJ7B,YALI,CAAP;AAMD,KApSI;;AAsSL;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA2E,IAAAA,aAAa,EAAE,SAASA,aAAT,CAAuB1C,cAAvB,EAAuC;AACpD,UAAI2C,eAAJ,EAAqBC,qBAArB;;AAEA,UAAIvD,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;AACA,UAAIgB,OAAO,GAAG,CAACqC,eAAe,GAAGxE,IAAI,CAACoC,QAAxB,MAAsC,IAAtC,IAA8CoC,eAAe,KAAK,KAAK,CAAvE,GAA2E,KAAK,CAAhF,GAAoF,CAACC,qBAAqB,GAAGD,eAAe,CAACrC,OAAzC,MAAsD,IAAtD,IAA8DsC,qBAAqB,KAAK,KAAK,CAA7F,GAAiG,KAAK,CAAtG,GAA0GA,qBAAqB,CAACpC,OAAtB,CAA8B,UAA9B,EAA0C,kBAAkBO,MAAlB,CAAyBf,cAAzB,EAAyC,wBAAzC,CAA1C,CAA5M;AACA,aAAO7B,IAAI,CAACsB,GAAL,CAAS,EAAT,EAAa;AAClBa,QAAAA,OAAO,EAAEA,OADS;AAElBmC,QAAAA,MAAM,EAAEpD;AAFU,OAAb,EAGJK,IAHI,CAGC,UAAUC,QAAV,EAAoB;AAC1B,eAAOT,mBAAmB,CAACf,IAAD,EAAOwB,QAAQ,CAACC,IAAhB,CAA1B;AACD,OALM,EAKJ7B,YALI,CAAP;AAMD,KA1UI;;AA4UL;;;;;;;;;;;;;;;;;;;AAmBA8E,IAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,IAApB,EAA0B;AACpC,aAAO3E,IAAI,CAAC2E,IAAD,CAAJ,CAAWpD,IAAX,CAAgB,UAAUC,QAAV,EAAoB;AACzC,eAAOA,QAAQ,CAACC,IAAhB;AACD,OAFM,EAEJ7B,YAFI,CAAP;AAGD;AAnWI,GAAP;AAqWD","sourcesContent":["import { createRequestConfig } from 'contentful-sdk-core';\nimport errorHandler from './error-handler';\nimport entities from './entities';\nexport default function createClientApi(_ref) {\n  var http = _ref.http;\n  var _entities$space = entities.space,\n      wrapSpace = _entities$space.wrapSpace,\n      wrapSpaceCollection = _entities$space.wrapSpaceCollection;\n  var wrapUser = entities.user.wrapUser;\n  var _entities$personalAcc = entities.personalAccessToken,\n      wrapPersonalAccessToken = _entities$personalAcc.wrapPersonalAccessToken,\n      wrapPersonalAccessTokenCollection = _entities$personalAcc.wrapPersonalAccessTokenCollection;\n  var _entities$organizatio = entities.organization,\n      wrapOrganization = _entities$organizatio.wrapOrganization,\n      wrapOrganizationCollection = _entities$organizatio.wrapOrganizationCollection;\n  var wrapUsageCollection = entities.usage.wrapUsageCollection;\n  return {\n    /**\n     * Gets all spaces\n     * @return Promise for a collection of Spaces\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getSpaces()\n     * .then((response) => console.log(response.items))\n     * .catch(console.error)\n     * ```\n     */\n    getSpaces: function getSpaces() {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return http.get('', createRequestConfig({\n        query: query\n      })).then(function (response) {\n        return wrapSpaceCollection(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Gets a space\n     * @param id - Space ID\n     * @return Promise for a Space\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getSpace('<space_id>')\n     * .then((space) => console.log(space))\n     * .catch(console.error)\n     * ```\n     */\n    getSpace: function getSpace(id) {\n      return http.get(id).then(function (response) {\n        return wrapSpace(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Creates a space\n     * @param data - Object representation of the Space to be created\n     * @param organizationId - Organization ID, if the associated token can manage more than one organization.\n     * @return Promise for the newly created Space\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.createSpace({\n     *   name: 'Name of new space'\n     * })\n     * .then((space) => console.log(space))\n     * .catch(console.error)\n     * ```\n     */\n    createSpace: function createSpace(data, organizationId) {\n      return http.post('', data, {\n        headers: organizationId ? {\n          'X-Contentful-Organization': organizationId\n        } : {}\n      }).then(function (response) {\n        return wrapSpace(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Gets an organization\n     * @param  id - Organization ID\n     * @return Promise for a Organization\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getOrganization('<org_id>')\n     * .then((org) => console.log(org))\n     * .catch(console.error)\n     * ```\n     */\n    getOrganization: function getOrganization(id) {\n      var _http$defaults, _http$defaults$baseUR;\n\n      var baseURL = (_http$defaults = http.defaults) === null || _http$defaults === void 0 ? void 0 : (_http$defaults$baseUR = _http$defaults.baseURL) === null || _http$defaults$baseUR === void 0 ? void 0 : _http$defaults$baseUR.replace('/spaces/', '/organizations/');\n      return http.get('', {\n        baseURL: baseURL\n      }).then(function (response) {\n        var org = response.data.items.find(function (org) {\n          return org.sys.id === id;\n        });\n\n        if (!org) {\n          var error = new Error(\"No organization was found with the ID \".concat(id, \" instead got \").concat(JSON.stringify(response))); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n\n          error.status = 404; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n\n          error.statusText = 'Not Found';\n          return Promise.reject(error);\n        }\n\n        return wrapOrganization(http, org);\n      }, errorHandler);\n    },\n\n    /**\n     * Gets a collection of Organizations\n     * @return Promise for a collection of Organizations\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getOrganizations()\n     * .then(result => console.log(result.items))\n     * .catch(console.error)\n     * ```\n     */\n    getOrganizations: function getOrganizations() {\n      var _http$defaults2, _http$defaults2$baseU;\n\n      var baseURL = (_http$defaults2 = http.defaults) === null || _http$defaults2 === void 0 ? void 0 : (_http$defaults2$baseU = _http$defaults2.baseURL) === null || _http$defaults2$baseU === void 0 ? void 0 : _http$defaults2$baseU.replace('/spaces/', '/organizations/');\n      return http.get('', {\n        baseURL: baseURL\n      }).then(function (response) {\n        return wrapOrganizationCollection(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Gets the authenticated user\n     * @return Promise for a User\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getCurrentUser()\n     * .then(user => console.log(user.firstName))\n     * .catch(console.error)\n     * ```\n     */\n    getCurrentUser: function getCurrentUser() {\n      var _http$defaults3, _http$defaults3$baseU;\n\n      var baseURL = (_http$defaults3 = http.defaults) === null || _http$defaults3 === void 0 ? void 0 : (_http$defaults3$baseU = _http$defaults3.baseURL) === null || _http$defaults3$baseU === void 0 ? void 0 : _http$defaults3$baseU.replace('/spaces/', '/users/me/');\n      return http.get('', {\n        baseURL: baseURL\n      }).then(function (response) {\n        return wrapUser(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Creates a personal access token\n     * @param data - personal access token config\n     * @return Promise for a Token\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.createPersonalAccessToken(\n     *  {\n     *    \"name\": \"My Token\",\n     *    \"scope\": [\n     *      \"content_management_manage\"\n     *    ]\n     *  }\n     * )\n     * .then(personalAccessToken => console.log(personalAccessToken.token))\n     * .catch(console.error)\n     * ```\n     */\n    createPersonalAccessToken: function createPersonalAccessToken(data) {\n      var _http$defaults4, _http$defaults4$baseU;\n\n      var baseURL = (_http$defaults4 = http.defaults) === null || _http$defaults4 === void 0 ? void 0 : (_http$defaults4$baseU = _http$defaults4.baseURL) === null || _http$defaults4$baseU === void 0 ? void 0 : _http$defaults4$baseU.replace('/spaces/', '/users/me/access_tokens');\n      return http.post('', data, {\n        baseURL: baseURL\n      }).then(function (response) {\n        return wrapPersonalAccessToken(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Gets a personal access token\n     * @param data - personal access token config\n     * @return Promise for a Token\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getPersonalAccessToken(tokenId)\n     * .then(token => console.log(token.token))\n     * .catch(console.error)\n     * ```\n     */\n    getPersonalAccessToken: function getPersonalAccessToken(tokenId) {\n      var _http$defaults5, _http$defaults5$baseU;\n\n      var baseURL = (_http$defaults5 = http.defaults) === null || _http$defaults5 === void 0 ? void 0 : (_http$defaults5$baseU = _http$defaults5.baseURL) === null || _http$defaults5$baseU === void 0 ? void 0 : _http$defaults5$baseU.replace('/spaces/', '/users/me/access_tokens');\n      return http.get(tokenId, {\n        baseURL: baseURL\n      }).then(function (response) {\n        return wrapPersonalAccessToken(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Gets all personal access tokens\n     * @return Promise for a Token\n     * @example ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getPersonalAccessTokens()\n     * .then(response => console.log(reponse.items))\n     * .catch(console.error)\n     * ```\n     */\n    getPersonalAccessTokens: function getPersonalAccessTokens() {\n      var _http$defaults6, _http$defaults6$baseU;\n\n      var baseURL = (_http$defaults6 = http.defaults) === null || _http$defaults6 === void 0 ? void 0 : (_http$defaults6$baseU = _http$defaults6.baseURL) === null || _http$defaults6$baseU === void 0 ? void 0 : _http$defaults6$baseU.replace('/spaces/', '/users/me/access_tokens');\n      return http.get('', {\n        baseURL: baseURL\n      }).then(function (response) {\n        return wrapPersonalAccessTokenCollection(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Get organization usage grouped by {@link UsageMetricEnum metric}\n     *\n     * @param organizationId - Id of an organization\n     * @param query - Query parameters\n     * @return Promise of a collection of usages\n     * @example ```javascript\n     *\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getOrganizationUsage('<organizationId>', {\n     *    'metric[in]': 'cma,gql',\n     *    'dateRange.startAt': '2019-10-22',\n     *    'dateRange.endAt': '2019-11-10'\n     *    }\n     * })\n     * .then(result => console.log(result.items))\n     * .catch(console.error)\n     * ```\n     */\n    getOrganizationUsage: function getOrganizationUsage(organizationId) {\n      var _http$defaults7, _http$defaults7$baseU;\n\n      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var baseURL = (_http$defaults7 = http.defaults) === null || _http$defaults7 === void 0 ? void 0 : (_http$defaults7$baseU = _http$defaults7.baseURL) === null || _http$defaults7$baseU === void 0 ? void 0 : _http$defaults7$baseU.replace('/spaces/', \"/organizations/\".concat(organizationId, \"/organization_periodic_usages\"));\n      return http.get('', {\n        baseURL: baseURL,\n        params: query\n      }).then(function (response) {\n        return wrapUsageCollection(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Get organization usage grouped by space and metric\n     *\n     * @param organizationId - Id of an organization\n     * @param query - Query parameters\n     * @return Promise of a collection of usages\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.getSpaceUsage('<organizationId>', {\n     *    skip: 0,\n     *    limit: 10,\n     *    'metric[in]': 'cda,cpa,gql',\n     *    'dateRange.startAt': '2019-10-22',\n     *    'dateRange.endAt': '2020-11-30'\n     *    }\n     * })\n     * .then(result => console.log(result.items))\n     * .catch(console.error)\n     * ```\n     */\n    getSpaceUsage: function getSpaceUsage(organizationId) {\n      var _http$defaults8, _http$defaults8$baseU;\n\n      var query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var baseURL = (_http$defaults8 = http.defaults) === null || _http$defaults8 === void 0 ? void 0 : (_http$defaults8$baseU = _http$defaults8.baseURL) === null || _http$defaults8$baseU === void 0 ? void 0 : _http$defaults8$baseU.replace('/spaces/', \"/organizations/\".concat(organizationId, \"/space_periodic_usages\"));\n      return http.get('', {\n        baseURL: baseURL,\n        params: query\n      }).then(function (response) {\n        return wrapUsageCollection(http, response.data);\n      }, errorHandler);\n    },\n\n    /**\n     * Make a custom request to the Contentful management API's /spaces endpoint\n     * @param opts - axios request options (https://github.com/mzabriskie/axios)\n     * @return Promise for the response data\n     * ```javascript\n     * const contentful = require('contentful-management')\n     *\n     * const client = contentful.createClient({\n     *   accessToken: '<content_management_api_key>'\n     * })\n     *\n     * client.rawRequest({\n     *   method: 'GET',\n     *   url: '/custom/path'\n     * })\n     * .then((responseData) => console.log(responseData))\n     * .catch(console.error)\n     * ```\n     */\n    rawRequest: function rawRequest(opts) {\n      return http(opts).then(function (response) {\n        return response.data;\n      }, errorHandler);\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}