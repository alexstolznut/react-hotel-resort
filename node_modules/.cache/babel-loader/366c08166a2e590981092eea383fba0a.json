{"ast":null,"code":"import cloneDeep from 'lodash/cloneDeep';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport errorHandler from '../error-handler';\nimport { wrapCollection } from '../common-utils';\n\nfunction createPersonalAccessToken(http) {\n  return {\n    revoke: function revoke() {\n      var baseURL = (http.defaults.baseURL || '').replace('/spaces/', '/users/me/access_tokens');\n      return http.put(\"\".concat(this.sys.id, \"/revoked\"), null, {\n        baseURL: baseURL\n      }).then(function (response) {\n        return response.data;\n      }, errorHandler);\n    }\n  };\n}\n/**\n * @private\n * @param http - HTTP client instance\n * @param data - Raw  personal access token data\n * @return Wrapped personal access token\n */\n\n\nexport function wrapPersonalAccessToken(http, data) {\n  var personalAccessToken = toPlainObject(cloneDeep(data));\n  var personalAccessTokenWithMethods = enhanceWithMethods(personalAccessToken, createPersonalAccessToken(http));\n  return freezeSys(personalAccessTokenWithMethods);\n}\n/**\n * @private\n * @param http - HTTP client instance\n * @param data - Raw personal access collection data\n * @return Wrapped personal access token collection data\n */\n\nexport var wrapPersonalAccessTokenCollection = wrapCollection(wrapPersonalAccessToken);","map":{"version":3,"sources":["/Users/alexanderstolzoff/Desktop/Projects/resort/node_modules/contentful-management/dist/es-modules/entities/personal-access-token.js"],"names":["cloneDeep","freezeSys","toPlainObject","enhanceWithMethods","errorHandler","wrapCollection","createPersonalAccessToken","http","revoke","baseURL","defaults","replace","put","concat","sys","id","then","response","data","wrapPersonalAccessToken","personalAccessToken","personalAccessTokenWithMethods","wrapPersonalAccessTokenCollection"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,qBAAzC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAEA,SAASC,yBAAT,CAAmCC,IAAnC,EAAyC;AACvC,SAAO;AACLC,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,UAAIC,OAAO,GAAG,CAACF,IAAI,CAACG,QAAL,CAAcD,OAAd,IAAyB,EAA1B,EAA8BE,OAA9B,CAAsC,UAAtC,EAAkD,yBAAlD,CAAd;AACA,aAAOJ,IAAI,CAACK,GAAL,CAAS,GAAGC,MAAH,CAAU,KAAKC,GAAL,CAASC,EAAnB,EAAuB,UAAvB,CAAT,EAA6C,IAA7C,EAAmD;AACxDN,QAAAA,OAAO,EAAEA;AAD+C,OAAnD,EAEJO,IAFI,CAEC,UAAUC,QAAV,EAAoB;AAC1B,eAAOA,QAAQ,CAACC,IAAhB;AACD,OAJM,EAIJd,YAJI,CAAP;AAKD;AARI,GAAP;AAUD;AACD;;;;;;;;AAQA,OAAO,SAASe,uBAAT,CAAiCZ,IAAjC,EAAuCW,IAAvC,EAA6C;AAClD,MAAIE,mBAAmB,GAAGlB,aAAa,CAACF,SAAS,CAACkB,IAAD,CAAV,CAAvC;AACA,MAAIG,8BAA8B,GAAGlB,kBAAkB,CAACiB,mBAAD,EAAsBd,yBAAyB,CAACC,IAAD,CAA/C,CAAvD;AACA,SAAON,SAAS,CAACoB,8BAAD,CAAhB;AACD;AACD;;;;;;;AAOA,OAAO,IAAIC,iCAAiC,GAAGjB,cAAc,CAACc,uBAAD,CAAtD","sourcesContent":["import cloneDeep from 'lodash/cloneDeep';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport errorHandler from '../error-handler';\nimport { wrapCollection } from '../common-utils';\n\nfunction createPersonalAccessToken(http) {\n  return {\n    revoke: function revoke() {\n      var baseURL = (http.defaults.baseURL || '').replace('/spaces/', '/users/me/access_tokens');\n      return http.put(\"\".concat(this.sys.id, \"/revoked\"), null, {\n        baseURL: baseURL\n      }).then(function (response) {\n        return response.data;\n      }, errorHandler);\n    }\n  };\n}\n/**\n * @private\n * @param http - HTTP client instance\n * @param data - Raw  personal access token data\n * @return Wrapped personal access token\n */\n\n\nexport function wrapPersonalAccessToken(http, data) {\n  var personalAccessToken = toPlainObject(cloneDeep(data));\n  var personalAccessTokenWithMethods = enhanceWithMethods(personalAccessToken, createPersonalAccessToken(http));\n  return freezeSys(personalAccessTokenWithMethods);\n}\n/**\n * @private\n * @param http - HTTP client instance\n * @param data - Raw personal access collection data\n * @return Wrapped personal access token collection data\n */\n\nexport var wrapPersonalAccessTokenCollection = wrapCollection(wrapPersonalAccessToken);"]},"metadata":{},"sourceType":"module"}