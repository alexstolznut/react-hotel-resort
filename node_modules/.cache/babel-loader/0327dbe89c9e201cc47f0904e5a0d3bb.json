{"ast":null,"code":"import isPlainObject from 'lodash/isPlainObject';\n/**\n * Handles errors received from the server. Parses the error into a more useful\n * format, places it in an exception and throws it.\n * See https://www.contentful.com/developers/docs/references/errors/\n * for more details on the data received on the errorResponse.data property\n * and the expected error codes.\n * @private\n */\n\nexport default function errorHandler(errorResponse) {\n  var config = errorResponse.config,\n      response = errorResponse.response;\n  var errorName; // Obscure the Management token\n\n  if (config.headers && config.headers['Authorization']) {\n    var token = \"...\".concat(config.headers['Authorization'].substr(-5));\n    config.headers['Authorization'] = \"Bearer \".concat(token);\n  }\n\n  if (!isPlainObject(response) || !isPlainObject(config)) {\n    throw errorResponse;\n  }\n\n  var data = response === null || response === void 0 ? void 0 : response.data;\n  var errorData = {\n    status: response === null || response === void 0 ? void 0 : response.status,\n    statusText: response === null || response === void 0 ? void 0 : response.statusText,\n    message: '',\n    details: {}\n  };\n\n  if (isPlainObject(config)) {\n    errorData.request = {\n      url: config.url,\n      headers: config.headers,\n      method: config.method,\n      payloadData: config.data\n    };\n  }\n\n  if (data && isPlainObject(data)) {\n    if ('requestId' in data) {\n      errorData.requestId = data.requestId || 'UNKNOWN';\n    }\n\n    if ('message' in data) {\n      errorData.message = data.message || '';\n    }\n\n    if ('details' in data) {\n      errorData.details = data.details || {};\n    }\n\n    if ('sys' in data) {\n      if ('id' in data.sys) {\n        errorName = data.sys.id;\n      }\n    }\n  }\n\n  var error = new Error();\n  error.name = errorName && errorName !== 'Unknown' ? errorName : \"\".concat(response === null || response === void 0 ? void 0 : response.status, \" \").concat(response === null || response === void 0 ? void 0 : response.statusText);\n  error.message = JSON.stringify(errorData, null, '  ');\n  throw error;\n}","map":{"version":3,"sources":["/Users/alexanderstolzoff/Desktop/Projects/resort/node_modules/contentful-management/dist/es-modules/error-handler.js"],"names":["isPlainObject","errorHandler","errorResponse","config","response","errorName","headers","token","concat","substr","data","errorData","status","statusText","message","details","request","url","method","payloadData","requestId","sys","id","error","Error","name","JSON","stringify"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,sBAA1B;AAEA;;;;;;;;;AAQA,eAAe,SAASC,YAAT,CAAsBC,aAAtB,EAAqC;AAClD,MAAIC,MAAM,GAAGD,aAAa,CAACC,MAA3B;AAAA,MACIC,QAAQ,GAAGF,aAAa,CAACE,QAD7B;AAEA,MAAIC,SAAJ,CAHkD,CAGnC;;AAEf,MAAIF,MAAM,CAACG,OAAP,IAAkBH,MAAM,CAACG,OAAP,CAAe,eAAf,CAAtB,EAAuD;AACrD,QAAIC,KAAK,GAAG,MAAMC,MAAN,CAAaL,MAAM,CAACG,OAAP,CAAe,eAAf,EAAgCG,MAAhC,CAAuC,CAAC,CAAxC,CAAb,CAAZ;AACAN,IAAAA,MAAM,CAACG,OAAP,CAAe,eAAf,IAAkC,UAAUE,MAAV,CAAiBD,KAAjB,CAAlC;AACD;;AAED,MAAI,CAACP,aAAa,CAACI,QAAD,CAAd,IAA4B,CAACJ,aAAa,CAACG,MAAD,CAA9C,EAAwD;AACtD,UAAMD,aAAN;AACD;;AAED,MAAIQ,IAAI,GAAGN,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACM,IAAxE;AACA,MAAIC,SAAS,GAAG;AACdC,IAAAA,MAAM,EAAER,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACQ,MADvD;AAEdC,IAAAA,UAAU,EAAET,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACS,UAF3D;AAGdC,IAAAA,OAAO,EAAE,EAHK;AAIdC,IAAAA,OAAO,EAAE;AAJK,GAAhB;;AAOA,MAAIf,aAAa,CAACG,MAAD,CAAjB,EAA2B;AACzBQ,IAAAA,SAAS,CAACK,OAAV,GAAoB;AAClBC,MAAAA,GAAG,EAAEd,MAAM,CAACc,GADM;AAElBX,MAAAA,OAAO,EAAEH,MAAM,CAACG,OAFE;AAGlBY,MAAAA,MAAM,EAAEf,MAAM,CAACe,MAHG;AAIlBC,MAAAA,WAAW,EAAEhB,MAAM,CAACO;AAJF,KAApB;AAMD;;AAED,MAAIA,IAAI,IAAIV,aAAa,CAACU,IAAD,CAAzB,EAAiC;AAC/B,QAAI,eAAeA,IAAnB,EAAyB;AACvBC,MAAAA,SAAS,CAACS,SAAV,GAAsBV,IAAI,CAACU,SAAL,IAAkB,SAAxC;AACD;;AAED,QAAI,aAAaV,IAAjB,EAAuB;AACrBC,MAAAA,SAAS,CAACG,OAAV,GAAoBJ,IAAI,CAACI,OAAL,IAAgB,EAApC;AACD;;AAED,QAAI,aAAaJ,IAAjB,EAAuB;AACrBC,MAAAA,SAAS,CAACI,OAAV,GAAoBL,IAAI,CAACK,OAAL,IAAgB,EAApC;AACD;;AAED,QAAI,SAASL,IAAb,EAAmB;AACjB,UAAI,QAAQA,IAAI,CAACW,GAAjB,EAAsB;AACpBhB,QAAAA,SAAS,GAAGK,IAAI,CAACW,GAAL,CAASC,EAArB;AACD;AACF;AACF;;AAED,MAAIC,KAAK,GAAG,IAAIC,KAAJ,EAAZ;AACAD,EAAAA,KAAK,CAACE,IAAN,GAAapB,SAAS,IAAIA,SAAS,KAAK,SAA3B,GAAuCA,SAAvC,GAAmD,GAAGG,MAAH,CAAUJ,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACQ,MAAvE,EAA+E,GAA/E,EAAoFJ,MAApF,CAA2FJ,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACS,UAAxJ,CAAhE;AACAU,EAAAA,KAAK,CAACT,OAAN,GAAgBY,IAAI,CAACC,SAAL,CAAehB,SAAf,EAA0B,IAA1B,EAAgC,IAAhC,CAAhB;AACA,QAAMY,KAAN;AACD","sourcesContent":["import isPlainObject from 'lodash/isPlainObject';\n\n/**\n * Handles errors received from the server. Parses the error into a more useful\n * format, places it in an exception and throws it.\n * See https://www.contentful.com/developers/docs/references/errors/\n * for more details on the data received on the errorResponse.data property\n * and the expected error codes.\n * @private\n */\nexport default function errorHandler(errorResponse) {\n  var config = errorResponse.config,\n      response = errorResponse.response;\n  var errorName; // Obscure the Management token\n\n  if (config.headers && config.headers['Authorization']) {\n    var token = \"...\".concat(config.headers['Authorization'].substr(-5));\n    config.headers['Authorization'] = \"Bearer \".concat(token);\n  }\n\n  if (!isPlainObject(response) || !isPlainObject(config)) {\n    throw errorResponse;\n  }\n\n  var data = response === null || response === void 0 ? void 0 : response.data;\n  var errorData = {\n    status: response === null || response === void 0 ? void 0 : response.status,\n    statusText: response === null || response === void 0 ? void 0 : response.statusText,\n    message: '',\n    details: {}\n  };\n\n  if (isPlainObject(config)) {\n    errorData.request = {\n      url: config.url,\n      headers: config.headers,\n      method: config.method,\n      payloadData: config.data\n    };\n  }\n\n  if (data && isPlainObject(data)) {\n    if ('requestId' in data) {\n      errorData.requestId = data.requestId || 'UNKNOWN';\n    }\n\n    if ('message' in data) {\n      errorData.message = data.message || '';\n    }\n\n    if ('details' in data) {\n      errorData.details = data.details || {};\n    }\n\n    if ('sys' in data) {\n      if ('id' in data.sys) {\n        errorName = data.sys.id;\n      }\n    }\n  }\n\n  var error = new Error();\n  error.name = errorName && errorName !== 'Unknown' ? errorName : \"\".concat(response === null || response === void 0 ? void 0 : response.status, \" \").concat(response === null || response === void 0 ? void 0 : response.statusText);\n  error.message = JSON.stringify(errorData, null, '  ');\n  throw error;\n}"]},"metadata":{},"sourceType":"module"}