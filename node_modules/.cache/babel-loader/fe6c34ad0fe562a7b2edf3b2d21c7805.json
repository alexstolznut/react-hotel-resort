{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderstolzoff/Desktop/Projects/resort/src/context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nimport Client from './contentful';\nconst RoomContext = React.createContext(); //\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 400,\n      minPrice: 0,\n      maxPrice: 0,\n      size: 1000,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const name = event.target.name;\n      const value = target.type === 'checkbox' ? target.checked : event.target.value;\n      console.log(target.checked);\n      this.setState({\n        [name]: value\n      }, this.sortedRooms);\n    };\n  }\n\n  componentDidMount() {\n    let rooms;\n    Client.getEntries().then(response => rooms = this.formatData(response.items)).then(reponse => {\n      // let sortedRooms = this.formatData(this.sortedRooms())\n      let featuredRooms = rooms.filter(rooms => rooms.featured == true);\n      let maxPrice = Math.max(...rooms.map(item => item.price));\n      let maxSize = Math.max(...rooms.map(item => item.size));\n      this.setState({\n        rooms,\n        featuredRooms,\n        sortedRooms: rooms,\n        loading: false,\n        price: maxPrice,\n        maxPrice: maxPrice,\n        size: maxSize,\n        maxSize: maxSize\n      }); // console.log(sortedRooms)\n\n      console.log(featuredRooms);\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(images => images.fields.file.url);\n      let rooms = { ...item.fields,\n        images,\n        id\n      };\n      return rooms;\n    });\n    return tempItems;\n  }\n\n  sortedRooms() {\n    let {\n      price,\n      pets,\n      capacity,\n      size,\n      breakfast,\n      type,\n      minSize,\n      maxSize\n    } = this.state;\n    let tempRooms = [...this.state.rooms];\n    capacity = parseInt(capacity);\n    console.log(minSize);\n    price = parseInt(price);\n    minSize = parseInt(minSize);\n    maxSize = parseInt(maxSize);\n\n    if (minSize = \"NaN\") {\n      minSize = 0;\n    } // if(minSize === \"\" || minSize === NaN || minSize === null || minSize < 0) {\n    //     minSize = 0;\n    //     console.log(minSize)\n    // }\n\n\n    if (type != 'all') {\n      tempRooms = tempRooms.filter(items => items.type === type && items.price <= price && items.capacity >= capacity && items.size >= minSize && items.size <= maxSize);\n    } else {\n      tempRooms = tempRooms.filter(items => items.price <= price && items.capacity >= capacity && items.size <= maxSize && items.size >= minSize);\n    }\n\n    if (breakfast) {\n      tempRooms = tempRooms.filter(item => item.breakfast === true);\n    }\n\n    if (pets) {\n      tempRooms = tempRooms.filter(item => item.pets === true);\n    }\n\n    tempRooms.map(items => parseInt(items.capacity));\n    this.setState({\n      sortedRooms: tempRooms\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 16\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 23\n      }\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/alexanderstolzoff/Desktop/Projects/resort/src/context.js"],"names":["React","Component","items","Client","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","size","minSize","maxSize","breakfast","pets","getRoom","slug","tempRooms","room","find","handleChange","event","target","name","value","checked","console","log","setState","componentDidMount","getEntries","then","response","formatData","reponse","filter","featured","Math","max","map","item","tempItems","id","sys","images","fields","file","url","parseInt","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport items from './data';\nimport Client from './contentful'\nconst RoomContext = React.createContext();\n\n\n \n//\n\nclass RoomProvider extends Component {\n\n    state = {\n        rooms: [],\n        sortedRooms: [],\n        featuredRooms:[],\n        loading: true,\n        type: 'all',\n        capacity: 1,\n        price: 400, \n        minPrice: 0,\n        maxPrice: 0,\n        size: 1000,\n        minSize: 0,\n        maxSize: 0,\n        breakfast: false,\n        pets: false\n\n    };\n\n\n    componentDidMount(){\n        let rooms;\n        Client.getEntries().then(response => rooms = this.formatData(response.items)).then(reponse=>{\n        // let sortedRooms = this.formatData(this.sortedRooms())\n        let featuredRooms = rooms.filter(rooms=>rooms.featured==true);\n        let maxPrice = Math.max(...rooms.map(item=>item.price));\n        let maxSize = Math.max(...rooms.map(item=>item.size));\n        this.setState({\n            rooms,\n            featuredRooms,\n            sortedRooms: rooms,\n            loading: false,\n            price: maxPrice,\n            maxPrice: maxPrice,\n            size: maxSize,\n            maxSize: maxSize\n        })\n        // console.log(sortedRooms)\n        console.log(featuredRooms)\n    });\n    }\n\n\n    formatData(items) {\n        let tempItems = items.map(item=>{\n            let id = item.sys.id;\n            let images = item.fields.images.map(images=>images.fields.file.url);\n            let rooms = {...item.fields, images, id};\n            return rooms;\n        });\n        return tempItems;\n\n    }\n\n    sortedRooms() {\n        let {price, pets, capacity, size, breakfast, type, minSize, maxSize} = this.state;\n        let tempRooms = [...this.state.rooms]\n        capacity = parseInt(capacity);\n        console.log(minSize);\n        price = parseInt(price);\n        minSize = parseInt(minSize);\n        maxSize = parseInt(maxSize);\n\n        if(minSize = \"NaN\"){\n            minSize = 0\n        }\n       \n        // if(minSize === \"\" || minSize === NaN || minSize === null || minSize < 0) {\n        //     minSize = 0;\n        //     console.log(minSize)\n        // }\n        if( type != 'all') {\n            tempRooms = tempRooms.filter(items => items.type === type && items.price <= price && items.capacity >= capacity && items.size >= minSize && items.size <= maxSize);\n        } else {\n            tempRooms = tempRooms.filter(items =>  items.price <= price &&  items.capacity >= capacity && items.size <= maxSize && items.size >= minSize);\n        }\n        if (breakfast){\n            tempRooms = tempRooms.filter(item => item.breakfast === true)\n        }\n\n        if (pets){\n            tempRooms = tempRooms.filter(item => item.pets === true)\n        }\n        tempRooms.map(items=> parseInt(items.capacity))\n        this.setState({\n            sortedRooms: tempRooms\n        })\n        \n        \n    }\n\n    \n\n    getRoom = slug => {\n        let tempRooms = [...this.state.rooms];\n        const room = tempRooms.find(room => room.slug===slug);\n        return room;\n    }\n\n    handleChange = event => {\n        const target = event.target;\n        const name = event.target.name;\n        const value =  target.type === 'checkbox' ? target.checked : event.target.value;\n        console.log(target.checked);\n        this.setState({\n            [name]: value \n        }, this.sortedRooms);\n    }\n    \n    render() {\n        return (\n            <RoomContext.Provider value={{...this.state, getRoom:this.getRoom, handleChange: this.handleChange}}>\n                {this.props.children}\n            </RoomContext.Provider>\n        )\n    }\n}\n\n\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Component) {\n    return function ConsumerWrapper(props) {\n        return <RoomConsumer>\n            {value => <Component {...props} context={value}/>}\n        </RoomConsumer>\n    }\n}\n\nexport {RoomProvider, RoomConsumer, RoomContext}"]},"metadata":{},"sourceType":"module"}