{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderstolzoff/Desktop/Projects/resort/src/context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext(); //\n\nconsole.log(typeof items);\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 2,\n      price: 400,\n      minPrice: 0,\n      maxPrice: 0,\n      size: 1000,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: true\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const name = event.target.name;\n      const value = event.type === 'checkbox' ? target.checked : event.target.value;\n      console.log(name, value);\n\n      if (name === 'minSize' && value == \"\") {\n        this.setState({\n          minSize: 0\n        }, this.sortedRooms);\n      }\n\n      this.setState({\n        [name]: value\n      }, this.sortedRooms);\n    };\n  }\n\n  componentDidMount() {\n    let rooms = this.formatData(items); // let sortedRooms = this.formatData(this.sortedRooms())\n\n    let featuredRooms = rooms.filter(rooms => rooms.featured == true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: [],\n      loading: false,\n      price: maxPrice,\n      maxPrice: maxPrice,\n      size: maxSize,\n      maxSize: maxSize\n    }, this.sortedRooms); // console.log(sortedRooms)\n\n    console.log(featuredRooms);\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(images => images.fields.file.url);\n      let rooms = { ...item.fields,\n        images,\n        id\n      };\n      return rooms;\n    });\n    return tempItems;\n  }\n\n  sortedRooms() {\n    let {\n      price,\n      pets,\n      capacity,\n      size,\n      breakfast,\n      type,\n      minSize,\n      maxSize\n    } = this.state;\n    let tempRooms = [...this.state.rooms];\n    capacity = parseInt(capacity);\n    minSize = parseInt(minSize);\n    maxSize = parseInt(maxSize);\n\n    if (type != 'all') {\n      tempRooms = tempRooms.filter(items => {\n        return items.price <= price && items.pets === pets && items.capacity >= capacity && items.size <= maxSize && items.size >= minSize && items.breakfast === breakfast && items.type === type;\n      });\n    } else {\n      tempRooms = tempRooms.filter(items => items.price <= price && items.pets === pets && items.capacity >= capacity && items.size <= maxSize && items.size >= minSize && items.breakfast === breakfast);\n    }\n\n    tempRooms.map(items => parseInt(items.capacity));\n    this.setState({\n      sortedRooms: tempRooms\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 16\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/alexanderstolzoff/Desktop/Projects/resort/src/context.js"],"names":["React","Component","items","RoomContext","createContext","console","log","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","size","minSize","maxSize","breakfast","pets","getRoom","slug","tempRooms","room","find","handleChange","event","target","name","value","checked","setState","componentDidMount","formatData","filter","featured","Math","max","map","item","tempItems","id","sys","images","fields","file","url","parseInt","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport items from './data';\nconst RoomContext = React.createContext();\n//\nconsole.log(typeof items)\nclass RoomProvider extends Component {\n\n    state = {\n        rooms: [],\n        sortedRooms: [],\n        featuredRooms:[],\n        loading: true,\n        type: 'all',\n        capacity: 2,\n        price: 400, \n        minPrice: 0,\n        maxPrice: 0,\n        size: 1000,\n        minSize: 0,\n        maxSize: 0,\n        breakfast: false,\n        pets: true\n\n    };\n\n    componentDidMount(){\n        let rooms = this.formatData(items)\n        // let sortedRooms = this.formatData(this.sortedRooms())\n        let featuredRooms = rooms.filter(rooms=>rooms.featured==true);\n        let maxPrice = Math.max(...rooms.map(item=>item.price));\n        let maxSize = Math.max(...rooms.map(item=>item.size));\n        this.setState({\n            rooms,\n            featuredRooms,\n            sortedRooms: [],\n            loading: false,\n            price: maxPrice,\n            maxPrice: maxPrice,\n            size: maxSize,\n            maxSize: maxSize\n        }, this.sortedRooms)\n        // console.log(sortedRooms)\n        console.log(featuredRooms)\n    }\n\n\n    formatData(items) {\n        let tempItems = items.map(item=>{\n            let id = item.sys.id;\n            let images = item.fields.images.map(images=>images.fields.file.url);\n            let rooms = {...item.fields, images, id};\n            return rooms;\n        });\n        return tempItems;\n\n    }\n\n    sortedRooms() {\n        let {price, pets, capacity, size, breakfast, type, minSize, maxSize} = this.state;\n        let tempRooms = [...this.state.rooms]\n        capacity = parseInt(capacity);\n        minSize = parseInt(minSize);\n        maxSize = parseInt(maxSize);\n        if( type != 'all') {\n            tempRooms = tempRooms.filter(items => {return items.price <= price && items.pets === pets && items.capacity >= capacity && items.size <= maxSize && items.size >= minSize && items.breakfast === breakfast && items.type === type} );\n        } else {\n       tempRooms = tempRooms.filter(items =>  items.price <= price && items.pets === pets && items.capacity >= capacity && items.size <= maxSize && items.size >= minSize && items.breakfast === breakfast );\n        }\n        tempRooms.map(items=> parseInt(items.capacity))\n        this.setState({\n            sortedRooms: tempRooms\n        })\n        \n        \n    }\n\n    \n\n    getRoom = slug => {\n        let tempRooms = [...this.state.rooms];\n        const room = tempRooms.find(room => room.slug===slug);\n        return room;\n    }\n\n    handleChange = event => {\n        const target = event.target;\n        const name = event.target.name;\n        const value =  event.type === 'checkbox' ? target.checked : event.target.value;\n        console.log(name, value)\n        if(name === 'minSize' && value == \"\") {\n            this.setState({\n                minSize: 0\n            }, this.sortedRooms)\n        }\n        this.setState({\n            [name]: value \n        }, this.sortedRooms);\n    }\n    \n    render() {\n        return (\n            <RoomContext.Provider value={{...this.state, getRoom:this.getRoom, handleChange: this.handleChange}}>\n                {this.props.children}\n            </RoomContext.Provider>\n        )\n    }\n}\n\n\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Component) {\n    return function ConsumerWrapper(props) {\n        return <RoomConsumer>\n            {value => <Component {...props} context={value}/>}\n        </RoomConsumer>\n    }\n}\n\nexport {RoomProvider, RoomConsumer, RoomContext}"]},"metadata":{},"sourceType":"module"}