{"ast":null,"code":"import cloneDeep from 'lodash/cloneDeep';\nimport { freezeSys, toPlainObject, createRequestConfig } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport { wrapCollection } from '../common-utils';\nimport { createUpdateEntity, createDeleteEntity, createPublishEntity, createUnpublishEntity, createArchiveEntity, createUnarchiveEntity, createPublishedChecker, createUpdatedChecker, createDraftChecker, createArchivedChecker } from '../instance-actions';\nimport errorHandler from '../error-handler';\nimport { wrapSnapshot, wrapSnapshotCollection } from './snapshot';\n\nfunction createEntryApi(http) {\n  return {\n    update: createUpdateEntity({\n      http: http,\n      entityPath: 'entries',\n      wrapperMethod: wrapEntry\n    }),\n    \"delete\": createDeleteEntity({\n      http: http,\n      entityPath: 'entries'\n    }),\n    publish: createPublishEntity({\n      http: http,\n      entityPath: 'entries',\n      wrapperMethod: wrapEntry\n    }),\n    unpublish: createUnpublishEntity({\n      http: http,\n      entityPath: 'entries',\n      wrapperMethod: wrapEntry\n    }),\n    archive: createArchiveEntity({\n      http: http,\n      entityPath: 'entries',\n      wrapperMethod: wrapEntry\n    }),\n    unarchive: createUnarchiveEntity({\n      http: http,\n      entityPath: 'entries',\n      wrapperMethod: wrapEntry\n    }),\n    getSnapshots: function getSnapshots() {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return http.get(\"entries/\".concat(this.sys.id, \"/snapshots\"), createRequestConfig({\n        query: query\n      })).then(function (response) {\n        return wrapSnapshotCollection(http, response.data);\n      }, errorHandler);\n    },\n    getSnapshot: function getSnapshot(snapshotId) {\n      return http.get(\"entries/\".concat(this.sys.id, \"/snapshots/\").concat(snapshotId)).then(function (response) {\n        return wrapSnapshot(http, response.data);\n      }, errorHandler);\n    },\n    isPublished: createPublishedChecker(),\n    isUpdated: createUpdatedChecker(),\n    isDraft: createDraftChecker(),\n    isArchived: createArchivedChecker()\n  };\n}\n/**\n * @private\n * @param http - HTTP client instance\n * @param data - Raw entry data\n * @return Wrapped entry data\n */\n\n\nexport function wrapEntry(http, data) {\n  var entry = toPlainObject(cloneDeep(data));\n  var entryWithMethods = enhanceWithMethods(entry, createEntryApi(http));\n  return freezeSys(entryWithMethods);\n}\n/**\n * Data is also mixed in with link getters if links exist and includes were requested\n * @private\n */\n\nexport var wrapEntryCollection = wrapCollection(wrapEntry);","map":{"version":3,"sources":["/Users/alexanderstolzoff/Desktop/Projects/resort/node_modules/contentful-management/dist/es-modules/entities/entry.js"],"names":["cloneDeep","freezeSys","toPlainObject","createRequestConfig","enhanceWithMethods","wrapCollection","createUpdateEntity","createDeleteEntity","createPublishEntity","createUnpublishEntity","createArchiveEntity","createUnarchiveEntity","createPublishedChecker","createUpdatedChecker","createDraftChecker","createArchivedChecker","errorHandler","wrapSnapshot","wrapSnapshotCollection","createEntryApi","http","update","entityPath","wrapperMethod","wrapEntry","publish","unpublish","archive","unarchive","getSnapshots","query","arguments","length","undefined","get","concat","sys","id","then","response","data","getSnapshot","snapshotId","isPublished","isUpdated","isDraft","isArchived","entry","entryWithMethods","wrapEntryCollection"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,mBAAnC,QAA8D,qBAA9D;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,mBAAjD,EAAsEC,qBAAtE,EAA6FC,mBAA7F,EAAkHC,qBAAlH,EAAyIC,sBAAzI,EAAiKC,oBAAjK,EAAuLC,kBAAvL,EAA2MC,qBAA3M,QAAwO,qBAAxO;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,YAAT,EAAuBC,sBAAvB,QAAqD,YAArD;;AAEA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,SAAO;AACLC,IAAAA,MAAM,EAAEf,kBAAkB,CAAC;AACzBc,MAAAA,IAAI,EAAEA,IADmB;AAEzBE,MAAAA,UAAU,EAAE,SAFa;AAGzBC,MAAAA,aAAa,EAAEC;AAHU,KAAD,CADrB;AAML,cAAUjB,kBAAkB,CAAC;AAC3Ba,MAAAA,IAAI,EAAEA,IADqB;AAE3BE,MAAAA,UAAU,EAAE;AAFe,KAAD,CANvB;AAULG,IAAAA,OAAO,EAAEjB,mBAAmB,CAAC;AAC3BY,MAAAA,IAAI,EAAEA,IADqB;AAE3BE,MAAAA,UAAU,EAAE,SAFe;AAG3BC,MAAAA,aAAa,EAAEC;AAHY,KAAD,CAVvB;AAeLE,IAAAA,SAAS,EAAEjB,qBAAqB,CAAC;AAC/BW,MAAAA,IAAI,EAAEA,IADyB;AAE/BE,MAAAA,UAAU,EAAE,SAFmB;AAG/BC,MAAAA,aAAa,EAAEC;AAHgB,KAAD,CAf3B;AAoBLG,IAAAA,OAAO,EAAEjB,mBAAmB,CAAC;AAC3BU,MAAAA,IAAI,EAAEA,IADqB;AAE3BE,MAAAA,UAAU,EAAE,SAFe;AAG3BC,MAAAA,aAAa,EAAEC;AAHY,KAAD,CApBvB;AAyBLI,IAAAA,SAAS,EAAEjB,qBAAqB,CAAC;AAC/BS,MAAAA,IAAI,EAAEA,IADyB;AAE/BE,MAAAA,UAAU,EAAE,SAFmB;AAG/BC,MAAAA,aAAa,EAAEC;AAHgB,KAAD,CAzB3B;AA8BLK,IAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,UAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;AACA,aAAOX,IAAI,CAACc,GAAL,CAAS,WAAWC,MAAX,CAAkB,KAAKC,GAAL,CAASC,EAA3B,EAA+B,YAA/B,CAAT,EAAuDlC,mBAAmB,CAAC;AAChF2B,QAAAA,KAAK,EAAEA;AADyE,OAAD,CAA1E,EAEHQ,IAFG,CAEE,UAAUC,QAAV,EAAoB;AAC3B,eAAOrB,sBAAsB,CAACE,IAAD,EAAOmB,QAAQ,CAACC,IAAhB,CAA7B;AACD,OAJM,EAIJxB,YAJI,CAAP;AAKD,KArCI;AAsCLyB,IAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBC,UAArB,EAAiC;AAC5C,aAAOtB,IAAI,CAACc,GAAL,CAAS,WAAWC,MAAX,CAAkB,KAAKC,GAAL,CAASC,EAA3B,EAA+B,aAA/B,EAA8CF,MAA9C,CAAqDO,UAArD,CAAT,EAA2EJ,IAA3E,CAAgF,UAAUC,QAAV,EAAoB;AACzG,eAAOtB,YAAY,CAACG,IAAD,EAAOmB,QAAQ,CAACC,IAAhB,CAAnB;AACD,OAFM,EAEJxB,YAFI,CAAP;AAGD,KA1CI;AA2CL2B,IAAAA,WAAW,EAAE/B,sBAAsB,EA3C9B;AA4CLgC,IAAAA,SAAS,EAAE/B,oBAAoB,EA5C1B;AA6CLgC,IAAAA,OAAO,EAAE/B,kBAAkB,EA7CtB;AA8CLgC,IAAAA,UAAU,EAAE/B,qBAAqB;AA9C5B,GAAP;AAgDD;AACD;;;;;;;;AAQA,OAAO,SAASS,SAAT,CAAmBJ,IAAnB,EAAyBoB,IAAzB,EAA+B;AACpC,MAAIO,KAAK,GAAG7C,aAAa,CAACF,SAAS,CAACwC,IAAD,CAAV,CAAzB;AACA,MAAIQ,gBAAgB,GAAG5C,kBAAkB,CAAC2C,KAAD,EAAQ5B,cAAc,CAACC,IAAD,CAAtB,CAAzC;AACA,SAAOnB,SAAS,CAAC+C,gBAAD,CAAhB;AACD;AACD;;;;;AAKA,OAAO,IAAIC,mBAAmB,GAAG5C,cAAc,CAACmB,SAAD,CAAxC","sourcesContent":["import cloneDeep from 'lodash/cloneDeep';\nimport { freezeSys, toPlainObject, createRequestConfig } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport { wrapCollection } from '../common-utils';\nimport { createUpdateEntity, createDeleteEntity, createPublishEntity, createUnpublishEntity, createArchiveEntity, createUnarchiveEntity, createPublishedChecker, createUpdatedChecker, createDraftChecker, createArchivedChecker } from '../instance-actions';\nimport errorHandler from '../error-handler';\nimport { wrapSnapshot, wrapSnapshotCollection } from './snapshot';\n\nfunction createEntryApi(http) {\n  return {\n    update: createUpdateEntity({\n      http: http,\n      entityPath: 'entries',\n      wrapperMethod: wrapEntry\n    }),\n    \"delete\": createDeleteEntity({\n      http: http,\n      entityPath: 'entries'\n    }),\n    publish: createPublishEntity({\n      http: http,\n      entityPath: 'entries',\n      wrapperMethod: wrapEntry\n    }),\n    unpublish: createUnpublishEntity({\n      http: http,\n      entityPath: 'entries',\n      wrapperMethod: wrapEntry\n    }),\n    archive: createArchiveEntity({\n      http: http,\n      entityPath: 'entries',\n      wrapperMethod: wrapEntry\n    }),\n    unarchive: createUnarchiveEntity({\n      http: http,\n      entityPath: 'entries',\n      wrapperMethod: wrapEntry\n    }),\n    getSnapshots: function getSnapshots() {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return http.get(\"entries/\".concat(this.sys.id, \"/snapshots\"), createRequestConfig({\n        query: query\n      })).then(function (response) {\n        return wrapSnapshotCollection(http, response.data);\n      }, errorHandler);\n    },\n    getSnapshot: function getSnapshot(snapshotId) {\n      return http.get(\"entries/\".concat(this.sys.id, \"/snapshots/\").concat(snapshotId)).then(function (response) {\n        return wrapSnapshot(http, response.data);\n      }, errorHandler);\n    },\n    isPublished: createPublishedChecker(),\n    isUpdated: createUpdatedChecker(),\n    isDraft: createDraftChecker(),\n    isArchived: createArchivedChecker()\n  };\n}\n/**\n * @private\n * @param http - HTTP client instance\n * @param data - Raw entry data\n * @return Wrapped entry data\n */\n\n\nexport function wrapEntry(http, data) {\n  var entry = toPlainObject(cloneDeep(data));\n  var entryWithMethods = enhanceWithMethods(entry, createEntryApi(http));\n  return freezeSys(entryWithMethods);\n}\n/**\n * Data is also mixed in with link getters if links exist and includes were requested\n * @private\n */\n\nexport var wrapEntryCollection = wrapCollection(wrapEntry);"]},"metadata":{},"sourceType":"module"}