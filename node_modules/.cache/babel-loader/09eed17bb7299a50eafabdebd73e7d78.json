{"ast":null,"code":"import { toPlainObject, freezeSys } from 'contentful-sdk-core';\nimport cloneDeep from 'lodash/cloneDeep';\nimport errorHandler from '../error-handler';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport { createDeleteEntity } from '../instance-actions';\nimport { wrapCollection } from '../common-utils';\n\nfunction createAppInstallationApi(http) {\n  return {\n    update: function update() {\n      var self = this;\n      var raw = self.toPlainObject();\n      var data = cloneDeep(raw);\n      delete data.sys;\n      return http.put(\"app_installations/\".concat(self.sys.appDefinition.sys.id), data).then(function (response) {\n        return wrapAppInstallation(http, response.data);\n      }, errorHandler);\n    },\n    \"delete\": createDeleteEntity({\n      http: http,\n      entityPath: 'app_installations'\n    })\n  };\n}\n/**\n * @private\n * @param http - HTTP client instance\n * @param data - Raw App Installation data\n * @return Wrapped App installation data\n */\n\n\nexport function wrapAppInstallation(http, data) {\n  var appInstallation = toPlainObject(cloneDeep(data));\n  var appInstallationWithMethods = enhanceWithMethods(appInstallation, createAppInstallationApi(http));\n  return freezeSys(appInstallationWithMethods);\n}\n/**\n * @private\n */\n\nexport var wrapAppInstallationCollection = wrapCollection(wrapAppInstallation);","map":{"version":3,"sources":["/Users/alexanderstolzoff/Desktop/Projects/resort/node_modules/contentful-management/dist/es-modules/entities/app-installation.js"],"names":["toPlainObject","freezeSys","cloneDeep","errorHandler","enhanceWithMethods","createDeleteEntity","wrapCollection","createAppInstallationApi","http","update","self","raw","data","sys","put","concat","appDefinition","id","then","response","wrapAppInstallation","entityPath","appInstallation","appInstallationWithMethods","wrapAppInstallationCollection"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,SAAxB,QAAyC,qBAAzC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAEA,SAASC,wBAAT,CAAkCC,IAAlC,EAAwC;AACtC,SAAO;AACLC,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,UAAIC,IAAI,GAAG,IAAX;AACA,UAAIC,GAAG,GAAGD,IAAI,CAACV,aAAL,EAAV;AACA,UAAIY,IAAI,GAAGV,SAAS,CAACS,GAAD,CAApB;AACA,aAAOC,IAAI,CAACC,GAAZ;AACA,aAAOL,IAAI,CAACM,GAAL,CAAS,qBAAqBC,MAArB,CAA4BL,IAAI,CAACG,GAAL,CAASG,aAAT,CAAuBH,GAAvB,CAA2BI,EAAvD,CAAT,EAAqEL,IAArE,EAA2EM,IAA3E,CAAgF,UAAUC,QAAV,EAAoB;AACzG,eAAOC,mBAAmB,CAACZ,IAAD,EAAOW,QAAQ,CAACP,IAAhB,CAA1B;AACD,OAFM,EAEJT,YAFI,CAAP;AAGD,KATI;AAUL,cAAUE,kBAAkB,CAAC;AAC3BG,MAAAA,IAAI,EAAEA,IADqB;AAE3Ba,MAAAA,UAAU,EAAE;AAFe,KAAD;AAVvB,GAAP;AAeD;AACD;;;;;;;;AAQA,OAAO,SAASD,mBAAT,CAA6BZ,IAA7B,EAAmCI,IAAnC,EAAyC;AAC9C,MAAIU,eAAe,GAAGtB,aAAa,CAACE,SAAS,CAACU,IAAD,CAAV,CAAnC;AACA,MAAIW,0BAA0B,GAAGnB,kBAAkB,CAACkB,eAAD,EAAkBf,wBAAwB,CAACC,IAAD,CAA1C,CAAnD;AACA,SAAOP,SAAS,CAACsB,0BAAD,CAAhB;AACD;AACD;;;;AAIA,OAAO,IAAIC,6BAA6B,GAAGlB,cAAc,CAACc,mBAAD,CAAlD","sourcesContent":["import { toPlainObject, freezeSys } from 'contentful-sdk-core';\nimport cloneDeep from 'lodash/cloneDeep';\nimport errorHandler from '../error-handler';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport { createDeleteEntity } from '../instance-actions';\nimport { wrapCollection } from '../common-utils';\n\nfunction createAppInstallationApi(http) {\n  return {\n    update: function update() {\n      var self = this;\n      var raw = self.toPlainObject();\n      var data = cloneDeep(raw);\n      delete data.sys;\n      return http.put(\"app_installations/\".concat(self.sys.appDefinition.sys.id), data).then(function (response) {\n        return wrapAppInstallation(http, response.data);\n      }, errorHandler);\n    },\n    \"delete\": createDeleteEntity({\n      http: http,\n      entityPath: 'app_installations'\n    })\n  };\n}\n/**\n * @private\n * @param http - HTTP client instance\n * @param data - Raw App Installation data\n * @return Wrapped App installation data\n */\n\n\nexport function wrapAppInstallation(http, data) {\n  var appInstallation = toPlainObject(cloneDeep(data));\n  var appInstallationWithMethods = enhanceWithMethods(appInstallation, createAppInstallationApi(http));\n  return freezeSys(appInstallationWithMethods);\n}\n/**\n * @private\n */\n\nexport var wrapAppInstallationCollection = wrapCollection(wrapAppInstallation);"]},"metadata":{},"sourceType":"module"}