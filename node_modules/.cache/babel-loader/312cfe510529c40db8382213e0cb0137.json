{"ast":null,"code":"import cloneDeep from 'lodash/cloneDeep';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport { createUpdateEntity, createDeleteEntity } from '../instance-actions';\nimport { wrapCollection } from '../common-utils';\n\nfunction createApiKeyApi(http) {\n  return {\n    update: function update() {\n      var self = this;\n\n      if ('accessToken' in self) {\n        delete self.accessToken;\n      }\n\n      if ('preview_api_key' in self) {\n        delete self.preview_api_key;\n      }\n\n      if ('policies' in self) {\n        delete self.policies;\n      }\n\n      var update = createUpdateEntity({\n        http: http,\n        entityPath: 'api_keys',\n        wrapperMethod: wrapApiKey\n      });\n      return update.call(self);\n    },\n    \"delete\": createDeleteEntity({\n      http: http,\n      entityPath: 'api_keys'\n    })\n  };\n}\n/**\n * @private\n * @param http - HTTP client instance\n * @param data - Raw api key data\n */\n\n\nexport function wrapApiKey(http, data) {\n  var apiKey = toPlainObject(cloneDeep(data));\n  var apiKeyWithMethods = enhanceWithMethods(apiKey, createApiKeyApi(http));\n  return freezeSys(apiKeyWithMethods);\n}\n/**\n * @private\n * @param http - HTTP client instance\n * @param data - Raw api key collection data\n * @return Wrapped api key collection data\n */\n\nexport var wrapApiKeyCollection = wrapCollection(wrapApiKey);","map":{"version":3,"sources":["/Users/alexanderstolzoff/Desktop/Projects/resort/node_modules/contentful-management/dist/es-modules/entities/api-key.js"],"names":["cloneDeep","freezeSys","toPlainObject","enhanceWithMethods","createUpdateEntity","createDeleteEntity","wrapCollection","createApiKeyApi","http","update","self","accessToken","preview_api_key","policies","entityPath","wrapperMethod","wrapApiKey","call","data","apiKey","apiKeyWithMethods","wrapApiKeyCollection"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,qBAAzC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AACA,SAASC,kBAAT,EAA6BC,kBAA7B,QAAuD,qBAAvD;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAEA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,SAAO;AACLC,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,UAAIC,IAAI,GAAG,IAAX;;AAEA,UAAI,iBAAiBA,IAArB,EAA2B;AACzB,eAAOA,IAAI,CAACC,WAAZ;AACD;;AAED,UAAI,qBAAqBD,IAAzB,EAA+B;AAC7B,eAAOA,IAAI,CAACE,eAAZ;AACD;;AAED,UAAI,cAAcF,IAAlB,EAAwB;AACtB,eAAOA,IAAI,CAACG,QAAZ;AACD;;AAED,UAAIJ,MAAM,GAAGL,kBAAkB,CAAC;AAC9BI,QAAAA,IAAI,EAAEA,IADwB;AAE9BM,QAAAA,UAAU,EAAE,UAFkB;AAG9BC,QAAAA,aAAa,EAAEC;AAHe,OAAD,CAA/B;AAKA,aAAOP,MAAM,CAACQ,IAAP,CAAYP,IAAZ,CAAP;AACD,KAtBI;AAuBL,cAAUL,kBAAkB,CAAC;AAC3BG,MAAAA,IAAI,EAAEA,IADqB;AAE3BM,MAAAA,UAAU,EAAE;AAFe,KAAD;AAvBvB,GAAP;AA4BD;AACD;;;;;;;AAOA,OAAO,SAASE,UAAT,CAAoBR,IAApB,EAA0BU,IAA1B,EAAgC;AACrC,MAAIC,MAAM,GAAGjB,aAAa,CAACF,SAAS,CAACkB,IAAD,CAAV,CAA1B;AACA,MAAIE,iBAAiB,GAAGjB,kBAAkB,CAACgB,MAAD,EAASZ,eAAe,CAACC,IAAD,CAAxB,CAA1C;AACA,SAAOP,SAAS,CAACmB,iBAAD,CAAhB;AACD;AACD;;;;;;;AAOA,OAAO,IAAIC,oBAAoB,GAAGf,cAAc,CAACU,UAAD,CAAzC","sourcesContent":["import cloneDeep from 'lodash/cloneDeep';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport { createUpdateEntity, createDeleteEntity } from '../instance-actions';\nimport { wrapCollection } from '../common-utils';\n\nfunction createApiKeyApi(http) {\n  return {\n    update: function update() {\n      var self = this;\n\n      if ('accessToken' in self) {\n        delete self.accessToken;\n      }\n\n      if ('preview_api_key' in self) {\n        delete self.preview_api_key;\n      }\n\n      if ('policies' in self) {\n        delete self.policies;\n      }\n\n      var update = createUpdateEntity({\n        http: http,\n        entityPath: 'api_keys',\n        wrapperMethod: wrapApiKey\n      });\n      return update.call(self);\n    },\n    \"delete\": createDeleteEntity({\n      http: http,\n      entityPath: 'api_keys'\n    })\n  };\n}\n/**\n * @private\n * @param http - HTTP client instance\n * @param data - Raw api key data\n */\n\n\nexport function wrapApiKey(http, data) {\n  var apiKey = toPlainObject(cloneDeep(data));\n  var apiKeyWithMethods = enhanceWithMethods(apiKey, createApiKeyApi(http));\n  return freezeSys(apiKeyWithMethods);\n}\n/**\n * @private\n * @param http - HTTP client instance\n * @param data - Raw api key collection data\n * @return Wrapped api key collection data\n */\n\nexport var wrapApiKeyCollection = wrapCollection(wrapApiKey);"]},"metadata":{},"sourceType":"module"}