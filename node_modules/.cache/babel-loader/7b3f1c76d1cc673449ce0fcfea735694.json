{"ast":null,"code":"import cloneDeep from 'lodash/cloneDeep';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport errorHandler from '../error-handler';\nimport { createDeleteEntity } from '../instance-actions';\nimport { wrapCollection } from '../common-utils';\n\nfunction createOrganizationMembershipApi(http) {\n  return {\n    update: function update() {\n      var self = this;\n      var raw = self.toPlainObject();\n      var role = raw.role;\n      return http.put('organization_memberships' + '/' + self.sys.id, {\n        role: role\n      }, {\n        headers: {\n          'X-Contentful-Version': self.sys.version || 0\n        }\n      }).then(function (response) {\n        return wrapOrganizationMembership(http, response.data);\n      }, errorHandler);\n    },\n    \"delete\": createDeleteEntity({\n      http: http,\n      entityPath: 'organization_memberships'\n    })\n  };\n}\n/**\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw organization membership data\n * @return {OrganizationMembership} Wrapped organization membership data\n */\n\n\nexport function wrapOrganizationMembership(http, data) {\n  var organizationMembership = toPlainObject(cloneDeep(data));\n  var organizationMembershipWithMethods = enhanceWithMethods(organizationMembership, createOrganizationMembershipApi(http));\n  return freezeSys(organizationMembershipWithMethods);\n}\n/**\n * @private\n */\n\nexport var wrapOrganizationMembershipCollection = wrapCollection(wrapOrganizationMembership);","map":{"version":3,"sources":["/Users/alexanderstolzoff/Desktop/Projects/resort/node_modules/contentful-management/dist/es-modules/entities/organization-membership.js"],"names":["cloneDeep","freezeSys","toPlainObject","enhanceWithMethods","errorHandler","createDeleteEntity","wrapCollection","createOrganizationMembershipApi","http","update","self","raw","role","put","sys","id","headers","version","then","response","wrapOrganizationMembership","data","entityPath","organizationMembership","organizationMembershipWithMethods","wrapOrganizationMembershipCollection"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,qBAAzC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SAASC,kBAAT,QAAmC,qBAAnC;AACA,SAASC,cAAT,QAA+B,iBAA/B;;AAEA,SAASC,+BAAT,CAAyCC,IAAzC,EAA+C;AAC7C,SAAO;AACLC,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,UAAIC,IAAI,GAAG,IAAX;AACA,UAAIC,GAAG,GAAGD,IAAI,CAACR,aAAL,EAAV;AACA,UAAIU,IAAI,GAAGD,GAAG,CAACC,IAAf;AACA,aAAOJ,IAAI,CAACK,GAAL,CAAS,6BAA6B,GAA7B,GAAmCH,IAAI,CAACI,GAAL,CAASC,EAArD,EAAyD;AAC9DH,QAAAA,IAAI,EAAEA;AADwD,OAAzD,EAEJ;AACDI,QAAAA,OAAO,EAAE;AACP,kCAAwBN,IAAI,CAACI,GAAL,CAASG,OAAT,IAAoB;AADrC;AADR,OAFI,EAMJC,IANI,CAMC,UAAUC,QAAV,EAAoB;AAC1B,eAAOC,0BAA0B,CAACZ,IAAD,EAAOW,QAAQ,CAACE,IAAhB,CAAjC;AACD,OARM,EAQJjB,YARI,CAAP;AASD,KAdI;AAeL,cAAUC,kBAAkB,CAAC;AAC3BG,MAAAA,IAAI,EAAEA,IADqB;AAE3Bc,MAAAA,UAAU,EAAE;AAFe,KAAD;AAfvB,GAAP;AAoBD;AACD;;;;;;;;AAQA,OAAO,SAASF,0BAAT,CAAoCZ,IAApC,EAA0Ca,IAA1C,EAAgD;AACrD,MAAIE,sBAAsB,GAAGrB,aAAa,CAACF,SAAS,CAACqB,IAAD,CAAV,CAA1C;AACA,MAAIG,iCAAiC,GAAGrB,kBAAkB,CAACoB,sBAAD,EAAyBhB,+BAA+B,CAACC,IAAD,CAAxD,CAA1D;AACA,SAAOP,SAAS,CAACuB,iCAAD,CAAhB;AACD;AACD;;;;AAIA,OAAO,IAAIC,oCAAoC,GAAGnB,cAAc,CAACc,0BAAD,CAAzD","sourcesContent":["import cloneDeep from 'lodash/cloneDeep';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport errorHandler from '../error-handler';\nimport { createDeleteEntity } from '../instance-actions';\nimport { wrapCollection } from '../common-utils';\n\nfunction createOrganizationMembershipApi(http) {\n  return {\n    update: function update() {\n      var self = this;\n      var raw = self.toPlainObject();\n      var role = raw.role;\n      return http.put('organization_memberships' + '/' + self.sys.id, {\n        role: role\n      }, {\n        headers: {\n          'X-Contentful-Version': self.sys.version || 0\n        }\n      }).then(function (response) {\n        return wrapOrganizationMembership(http, response.data);\n      }, errorHandler);\n    },\n    \"delete\": createDeleteEntity({\n      http: http,\n      entityPath: 'organization_memberships'\n    })\n  };\n}\n/**\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw organization membership data\n * @return {OrganizationMembership} Wrapped organization membership data\n */\n\n\nexport function wrapOrganizationMembership(http, data) {\n  var organizationMembership = toPlainObject(cloneDeep(data));\n  var organizationMembershipWithMethods = enhanceWithMethods(organizationMembership, createOrganizationMembershipApi(http));\n  return freezeSys(organizationMembershipWithMethods);\n}\n/**\n * @private\n */\n\nexport var wrapOrganizationMembershipCollection = wrapCollection(wrapOrganizationMembership);"]},"metadata":{},"sourceType":"module"}