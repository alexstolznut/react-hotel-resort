{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderstolzoff/Desktop/Projects/resort/src/context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext(); //\n\nconsole.log(typeof items);\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 400,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const type = event.target.type;\n      const name = event.target.name;\n      const value = event.target.value;\n      console.log(`type: ${type}\n        name: ${name}\n        value: ${value}`);\n      this.setState({\n        [name]: value\n      });\n      console.log(this.state.type);\n    };\n  }\n\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let sortedRooms = this.formatData(this.sortedRooms(items, {\n      price: 200,\n      pets: true,\n      capacity: 2,\n      size: 500,\n      breakfast: true,\n      type: \"double\"\n    }));\n    let featuredRooms = rooms.filter(rooms => rooms.featured == true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: sortedRooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice: maxPrice,\n      size: maxSize,\n      maxSize: maxSize\n    });\n    console.log(sortedRooms);\n    console.log(featuredRooms);\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(images => images.fields.file.url);\n      let rooms = { ...item.fields,\n        images,\n        id\n      };\n      return rooms;\n    });\n    return tempItems;\n  }\n\n  sortedRooms(items, params) {\n    const {\n      price,\n      pets,\n      capacity,\n      size,\n      breakfast,\n      type\n    } = params;\n    let tempSortedRooms = items.filter(items => {\n      return items.fields.price <= price && items.fields.pets === pets && items.fields.capacity <= capacity && items.fields.size <= size && items.fields.breakfast === breakfast && items.fields.type === type;\n    });\n    return tempSortedRooms;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 16\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/alexanderstolzoff/Desktop/Projects/resort/src/context.js"],"names":["React","Component","items","RoomContext","createContext","console","log","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getRoom","slug","tempRooms","room","find","handleChange","event","target","name","value","setState","componentDidMount","formatData","size","filter","featured","Math","max","map","item","tempItems","id","sys","images","fields","file","url","params","tempSortedRooms","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport items from './data';\nconst RoomContext = React.createContext();\n//\nconsole.log(typeof items)\nclass RoomProvider extends Component {\n\n    state = {\n        rooms: [],\n        sortedRooms: [],\n        featuredRooms:[],\n        loading: true,\n        type: 'all',\n        capacity: 1,\n        price: 400, \n        minPrice: 0,\n        maxPrice: 0,\n        minSize: 0,\n        maxSize: 0,\n        breakfast: false,\n        pets: false\n\n    };\n\n    componentDidMount(){\n        let rooms = this.formatData(items)\n        let sortedRooms = this.formatData(this.sortedRooms(items,{price: 200, pets: true, capacity: 2, size: 500, breakfast: true, type:\"double\"}))\n        let featuredRooms = rooms.filter(rooms=>rooms.featured==true);\n        let maxPrice = Math.max(...rooms.map(item=>item.price));\n        let maxSize = Math.max(...rooms.map(item=>item.size));\n        this.setState({\n            rooms,\n            featuredRooms,\n            sortedRooms: sortedRooms,\n            loading: false,\n            price: maxPrice,\n            maxPrice: maxPrice,\n            size: maxSize,\n            maxSize: maxSize\n        })\n        console.log(sortedRooms)\n        console.log(featuredRooms)\n    }\n\n\n    formatData(items) {\n        let tempItems = items.map(item=>{\n            let id = item.sys.id;\n            let images = item.fields.images.map(images=>images.fields.file.url);\n            let rooms = {...item.fields, images, id};\n            return rooms;\n        });\n        return tempItems;\n\n    }\n\n    sortedRooms(items, params) {\n        const {price, pets, capacity, size, breakfast, type} = params;\n        let tempSortedRooms = items.filter(items => {return items.fields.price <= price && items.fields.pets === pets && items.fields.capacity <= capacity && items.fields.size <= size && items.fields.breakfast === breakfast && items.fields.type === type} );\n        return tempSortedRooms\n    }\n\n    \n\n    getRoom = slug => {\n        let tempRooms = [...this.state.rooms];\n        const room = tempRooms.find(room => room.slug===slug);\n        return room;\n    }\n\n    handleChange = event => {\n        const type = event.target.type;\n        const name = event.target.name;\n        const value = event.target.value;\n        console.log(`type: ${type}\n        name: ${name}\n        value: ${value}`)\n        this.setState({\n            [name]: value \n        });\n\n        console.log(this.state.type);\n    }\n    \n    render() {\n        return (\n            <RoomContext.Provider value={{...this.state, getRoom:this.getRoom, handleChange: this.handleChange}}>\n                {this.props.children}\n            </RoomContext.Provider>\n        )\n    }\n}\n\n\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Component) {\n    return function ConsumerWrapper(props) {\n        return <RoomConsumer>\n            {value => <Component {...props} context={value}/>}\n        </RoomConsumer>\n    }\n}\n\nexport {RoomProvider, RoomConsumer, RoomContext}"]},"metadata":{},"sourceType":"module"}