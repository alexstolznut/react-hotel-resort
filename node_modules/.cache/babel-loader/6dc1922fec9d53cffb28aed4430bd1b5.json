{"ast":null,"code":"import cloneDeep from 'lodash/cloneDeep';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport { createDeleteEntity } from '../instance-actions';\n\nfunction createUploadApi(http) {\n  return {\n    \"delete\": createDeleteEntity({\n      http: http,\n      entityPath: 'uploads'\n    })\n  };\n}\n/**\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw upload data\n * @return {Upload} Wrapped upload data\n */\n\n\nexport function wrapUpload(http, data) {\n  var upload = toPlainObject(cloneDeep(data));\n  var uploadWithMethods = enhanceWithMethods(upload, createUploadApi(http));\n  return freezeSys(uploadWithMethods);\n}","map":{"version":3,"sources":["/Users/alexanderstolzoff/Desktop/Projects/resort/node_modules/contentful-management/dist/es-modules/entities/upload.js"],"names":["cloneDeep","freezeSys","toPlainObject","enhanceWithMethods","createDeleteEntity","createUploadApi","http","entityPath","wrapUpload","data","upload","uploadWithMethods"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,aAApB,QAAyC,qBAAzC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AACA,SAASC,kBAAT,QAAmC,qBAAnC;;AAEA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,SAAO;AACL,cAAUF,kBAAkB,CAAC;AAC3BE,MAAAA,IAAI,EAAEA,IADqB;AAE3BC,MAAAA,UAAU,EAAE;AAFe,KAAD;AADvB,GAAP;AAMD;AACD;;;;;;;;AAQA,OAAO,SAASC,UAAT,CAAoBF,IAApB,EAA0BG,IAA1B,EAAgC;AACrC,MAAIC,MAAM,GAAGR,aAAa,CAACF,SAAS,CAACS,IAAD,CAAV,CAA1B;AACA,MAAIE,iBAAiB,GAAGR,kBAAkB,CAACO,MAAD,EAASL,eAAe,CAACC,IAAD,CAAxB,CAA1C;AACA,SAAOL,SAAS,CAACU,iBAAD,CAAhB;AACD","sourcesContent":["import cloneDeep from 'lodash/cloneDeep';\nimport { freezeSys, toPlainObject } from 'contentful-sdk-core';\nimport enhanceWithMethods from '../enhance-with-methods';\nimport { createDeleteEntity } from '../instance-actions';\n\nfunction createUploadApi(http) {\n  return {\n    \"delete\": createDeleteEntity({\n      http: http,\n      entityPath: 'uploads'\n    })\n  };\n}\n/**\n * @private\n * @param {Object} http - HTTP client instance\n * @param {Object} data - Raw upload data\n * @return {Upload} Wrapped upload data\n */\n\n\nexport function wrapUpload(http, data) {\n  var upload = toPlainObject(cloneDeep(data));\n  var uploadWithMethods = enhanceWithMethods(upload, createUploadApi(http));\n  return freezeSys(uploadWithMethods);\n}"]},"metadata":{},"sourceType":"module"}